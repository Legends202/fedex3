'use client'

import { useState, useEffect } from 'react'
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Package, Search, User, Truck, Box, CheckCircle, Globe, Phone, MapPin, MessageSquare, AlertTriangle, Settings, FileSearch } from 'lucide-react'
import Link from "next/link"

// Simulación de base de datos de paquetes
const initialPackagesDatabase = {
  '1234567891': {
    status: 'En tránsito',
    origin: 'Aguascalientes',
    destination: 'Guadalajara',
    estimatedDelivery: '2024-12-24',
    timeline: [
      { date: '2024-12-20', status: 'Paquete recibido', icon: Box },
      { date: '2024-12-22', status: 'En tránsito', icon: Truck },
      { date: '2024-12-24', status: 'Entrega estimada', icon: CheckCircle },
    ]
  },
}

export default function Component() {
  const [trackingNumber, setTrackingNumber] = useState('')
  const [packageInfo, setPackageInfo] = useState(null)
  const [showLanguageSelector, setShowLanguageSelector] = useState(false)
  const [isLoggedIn, setIsLoggedIn] = useState(false)
  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')
  const [newTrackingNumber, setNewTrackingNumber] = useState('')
  const [newPackageInfo, setNewPackageInfo] = useState({
    status: '',
    origin: '',
    destination: '',
    estimatedDelivery: '',
  })
  const [packagesDatabase, setPackagesDatabase] = useState(initialPackagesDatabase)

  useEffect(() => {
    if (trackingNumber) {
      const info = packagesDatabase[trackingNumber]
      setPackageInfo(info || null)
    } else {
      setPackageInfo(null)
    }
  }, [trackingNumber, packagesDatabase])

  const handleTrack = (e: React.FormEvent) => {
    e.preventDefault()
    // La búsqueda se realiza automáticamente en el useEffect
  }

  const handleLogin = (e: React.FormEvent) => {
    e.preventDefault()
    if (username === 'Legends300' && password === '27201792') {
      setIsLoggedIn(true)
      document.getElementById('loginModal').classList.add('hidden')
    } else {
      alert('Credenciales incorrectas')
    }
  }

  const handleLogout = () => {
    setIsLoggedIn(false)
    setUsername('')
    setPassword('')
  }

  const handleCreateTracking = (e: React.FormEvent) => {
    e.preventDefault()
    const newPackage = {
      ...newPackageInfo,
      timeline: [
        { date: new Date().toISOString().split('T')[0], status: 'Paquete registrado', icon: Box },
      ]
    }
    setPackagesDatabase(prevState => ({
      ...prevState,
      [newTrackingNumber]: newPackage
    }))
    setNewTrackingNumber('')
    setNewPackageInfo({
      status: '',
      origin: '',
      destination: '',
      estimatedDelivery: '',
    })
    alert('Registro de rastreo creado exitosamente')
  }

  return (
    <div className="min-h-screen bg-white">
      {/* Top Bar */}
      <div className="bg-[#4D148C] text-white">
        <div className="container mx-auto px-4">
          <div className="flex justify-between items-center py-2 text-sm">
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="sm" className="text-white hover:text-white/90">
                <Phone className="h-4 w-4 mr-2" />
                1.800.463.3339
              </Button>
              <Button variant="ghost" size="sm" className="text-white hover:text-white/90">
                <MapPin className="h-4 w-4 mr-2" />
                Ubicaciones
              </Button>
            </div>
            <div className="flex items-center space-x-4">
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" size="sm" className="text-white hover:text-white/90">
                    <Globe className="h-4 w-4 mr-2" />
                    México-Español
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent>
                  <DropdownMenuItem>English</DropdownMenuItem>
                  <DropdownMenuItem>Español</DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
              {isLoggedIn ? (
                <Button variant="ghost" size="sm" className="text-white hover:text-white/90" onClick={handleLogout}>
                  <User className="h-4 w-4 mr-2" />
                  Cerrar sesión
                </Button>
              ) : (
                <Button variant="ghost" size="sm" className="text-white hover:text-white/90" onClick={() => document.getElementById('loginModal').classList.remove('hidden')}>
                  <User className="h-4 w-4 mr-2" />
                  Iniciar sesión
                </Button>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Main Navigation */}
      <nav className="border-b">
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between py-4">
            <Link href="/" className="flex items-center">
              <span className="text-[#4D148C] text-3xl font-bold">Fed</span>
              <span className="text-[#FF6600] text-3xl font-bold">Ex</span>
            </Link>
            <div className="hidden md:flex items-center space-x-8">
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost">Enviar</Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent>
                  <DropdownMenuItem>Crear un envío</DropdownMenuItem>
                  <DropdownMenuItem>Tarifas y tiempos de tránsito</DropdownMenuItem>
                  <DropdownMenuItem>Programar una recolección</DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost">Rastrear</Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent>
                  <DropdownMenuItem>Rastrear por número</DropdownMenuItem>
                  <DropdownMenuItem>Rastrear por referencia</DropdownMenuItem>
                  <DropdownMenuItem>Gestionar entregas</DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost">Servicios de envío</Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent>
                  <DropdownMenuItem>FedEx Express</DropdownMenuItem>
                  <DropdownMenuItem>FedEx Ground</DropdownMenuItem>
                  <DropdownMenuItem>FedEx Freight</DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
              <Button variant="ghost">Soporte</Button>
            </div>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <div className="relative bg-gradient-to-r from-[#4D148C] to-[#FF6600] py-16">
        <div className="container mx-auto px-4">
          <div className="max-w-3xl mx-auto text-center text-white">
            <h1 className="text-4xl md:text-5xl font-bold mb-8">
              Envía, rastrea y gestiona tus envíos
            </h1>

            {/* Tracking Form */}
            <div className="bg-white rounded-lg p-6 shadow-lg">
              <form onSubmit={handleTrack} className="space-y-4">
                <div className="flex flex-col md:flex-row gap-4">
                  <Input
                    type="text"
                    placeholder="Ingrese hasta 30 números de rastreo"
                    value={trackingNumber}
                    onChange={(e) => setTrackingNumber(e.target.value.replace(/[^0-9]/g, ''))}
                    className="flex-grow text-gray-900"
                    maxLength={30}
                  />
                  <Button
                    type="submit"
                    className="bg-[#FF6600] hover:bg-[#FF6600]/90 text-white"
                  >
                    Rastrear
                  </Button>
                </div>
                <div className="text-sm text-left text-gray-600">
                  <p>También puede</p>
                  <Button variant="link" className="text-[#4D148C] p-0">
                    Rastrear por referencia
                  </Button>
                </div>
              </form>
            </div>

            {/* Tracking Results */}
            {packageInfo && (
              <div className="mt-8 bg-white rounded-lg p-6 shadow-lg text-left text-gray-800">
                <h2 className="text-2xl font-bold mb-4 text-[#4D148C]">Información del Paquete</h2>
                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <p className="mb-2"><strong>Estado:</strong> {packageInfo.status}</p>
                    <p className="mb-2"><strong>Origen:</strong> {packageInfo.origin}</p>
                    <p className="mb-2"><strong>Destino:</strong> {packageInfo.destination}</p>
                    <p className="mb-2"><strong>Entrega Estimada:</strong> {packageInfo.estimatedDelivery}</p>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-3">Línea de Tiempo del Envío</h3>
                    <div className="space-y-4">
                      {packageInfo.timeline.map((event, index) => (
                        <div key={index} className="flex items-center">
                          <div className="mr-4">
                            {event.icon && <event.icon className="h-6 w-6 text-[#4D148C]" />}
                          </div>
                          <div>
                            <p className="font-semibold">{event.status}</p>
                            <p className="text-sm text-gray-600">{event.date}</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            )}
            {packageInfo === null && trackingNumber && (
              <div className="mt-8 bg-red-100 border border-red-400 text-red-700 px-6 py-4 rounded-lg" role="alert">
                <p>No se encontró información para el número de rastreo proporcionado.</p>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Quick Links */}
      <div className="container mx-auto px-4 py-16">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div className="bg-white rounded-lg p-6 shadow-lg text-center hover:shadow-xl transition-shadow">
            <div className="flex justify-center mb-4">
              <Package className="h-12 w-12 text-[#4D148C]" />
            </div>
            <h3 className="text-lg font-bold mb-2">Crear un envío</h3>
            <p className="text-gray-600 mb-4">Prepare y envíe sus paquetes en línea</p>
            <Button variant="outline" className="w-full">Comenzar</Button>
          </div>
          <div className="bg-white rounded-lg p-6 shadow-lg text-center hover:shadow-xl transition-shadow">
            <div className="flex justify-center mb-4">
              <Truck className="h-12 w-12 text-[#4D148C]" />
            </div>
            <h3 className="text-lg font-bold mb-2">Programar una recolección</h3>
            <p className="text-gray-600 mb-4">Solicite una recolección para sus envíos</p>
            <Button variant="outline" className="w-full">Programar</Button>
          </div>
          <div className="bg-white rounded-lg p-6 shadow-lg text-center hover:shadow-xl transition-shadow">
            <div className="flex justify-center mb-4">
              <MapPin className="h-12 w-12 text-[#4D148C]" />
            </div>
            <h3 className="text-lg font-bold mb-2">Ubicaciones</h3>
            <p className="text-gray-600 mb-4">Encuentre centros FedEx cercanos</p>
            <Button variant="outline" className="w-full">Buscar</Button>
          </div>
        </div>
      </div>

      {/* Manage Shipments Section */}
      <div className="bg-gray-50 py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12">Administra tus envíos</h2>
          <div className="grid grid-cols-1 md:grid-cols-5 gap-8 mb-12">
            <div className="flex flex-col items-center text-center">
              <div className="w-16 h-16 mb-4 relative">
                <div className="absolute inset-0 bg-gradient-to-r from-[#4D148C] to-[#FF6600] rounded-full opacity-20"></div>
                <User className="w-full h-full text-[#4D148C] p-3" />
              </div>
              <h3 className="text-sm font-bold text-[#4D148C] mb-2">ABRIR UNA CUENTA</h3>
            </div>
            
            <div className="flex flex-col items-center text-center">
              <div className="w-16 h-16 mb-4 relative">
                <div className="absolute inset-0 bg-gradient-to-r from-[#4D148C] to-[#FF6600] rounded-full opacity-20"></div>
                <AlertTriangle className="w-full h-full text-[#4D148C] p-3" />
              </div>
              <h3 className="text-sm font-bold text-[#4D148C] mb-2">ALERTAS DE SERVICIO</h3>
            </div>

            <div className="flex flex-col items-center text-center">
              <div className="w-16 h-16 mb-4 relative">
                <div className="absolute inset-0 bg-gradient-to-r from-[#4D148C] to-[#FF6600] rounded-full opacity-20"></div>
                <Settings className="w-full h-full text-[#4D148C] p-3" />
              </div>
              <h3 className="text-sm font-bold text-[#4D148C] mb-2">HERRAMIENTAS EN LÍNEA</h3>
            </div>

            <div className="flex flex-col items-center text-center">
              <div className="w-16 h-16 mb-4 relative">
                <div className="absolute inset-0 bg-gradient-to-r from-[#4D148C] to-[#FF6600] rounded-full opacity-20"></div>
                <MapPin className="w-full h-full text-[#4D148C] p-3" />
              </div>
              <h3 className="text-sm font-bold text-[#4D148C] mb-2">HORARIO DE ATENCIÓN Y SERVICIOS</h3>
            </div>

            <div className="flex flex-col items-center text-center">
              <div className="w-16 h-16 mb-4 relative">
                <div className="absolute inset-0 bg-gradient-to-r from-[#4D148C] to-[#FF6600] rounded-full opacity-20"></div>
                <FileSearch className="w-full h-full text-[#4D148C] p-3" />
              </div>
              <h3 className="text-sm font-bold text-[#4D148C] mb-2">FEDEX® BILLING ONLINE</h3>
            </div>
          </div>

          {/* Security Notice */}
          <div className="max-w-4xl mx-auto text-gray-700 space-y-4">
            <p className="text-sm">
              FedEx no solicita, por medio de mensajes de correo electrónico o SMS no solicitados, pagos, o información personal a cambio de paquetes en tránsito o en custodia de FedEx. Tampoco solicita información por medio de llamadas, códigos de verificación enviados a través de SMS o WhatsApp.
            </p>
            <p className="text-sm">
              Si has recibido un mensaje de correo electrónico, SMS o llamada que afirma provenir de FedEx, y esta no es una forma de comunicación autorizada o solicitada por ti, puedes denunciarlo reenviándolo a <a href="mailto:abuse@fedex.com" className="text-[#4D148C] hover:underline">abuse@fedex.com</a>. Así mismo, te invitamos a visitar nuestra página de Reporte de Fraudes, en donde podrás encontrar más información para prevenirlos.
            </p>
            <p className="text-sm">
              Te informamos que los únicos canales oficiales para dar seguimiento a tus envíos de FedEx son a través de nuestra página fedex.com/mx o llamando a nuestro centro de atención al cliente, 55.5228.9904.
            </p>
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-white pt-16 border-t">
        {/* Footer content remains the same */}
      </footer>

      {/* Login Modal */}
      <div id="loginModal" className="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center">
        <div className="bg-white p-8 rounded-lg shadow-xl">
          <h2 className="text-2xl font-bold mb-4">Iniciar sesión</h2>
          <form onSubmit={handleLogin} className="space-y-4">
            <div>
              <label htmlFor="username" className="block text-sm font-medium text-gray-700">Usuario</label>
              <Input
                type="text"
                id="username"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="mt-1"
                required
              />
            </div>
            <div>
              <label htmlFor="password" className="block text-sm font-medium text-gray-700">Contraseña</label>
              <Input
                type="password"
                id="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="mt-1"
                required
              />
            </div>
            <div className="flex justify-between">
              <Button type="submit">Iniciar sesión</Button>
              <Button type="button" variant="outline" onClick={() => document.getElementById('loginModal').classList.add('hidden')}>
                Cancelar
              </Button>
            </div>
          </form>
        </div>
      </div>

      {/* Create Tracking Record Form (only visible when logged in) */}
      {isLoggedIn && (
        <div className="fixed bottom-20 right-6 bg-white p-6 rounded-lg shadow-lg">
          <h3 className="text-xl font-bold mb-4">Crear registro de rastreo</h3>
          <form onSubmit={handleCreateTracking} className="space-y-4">
            <div>
              <label htmlFor="newTrackingNumber" className="block text-sm font-medium text-gray-700">Número de rastreo</label>
              <Input
                type="text"
                id="newTrackingNumber"
                value={newTrackingNumber}
                onChange={(e) => setNewTrackingNumber(e.target.value)}
                className="mt-1"
                required
              />
            </div>
            <div>
              <label htmlFor="status" className="block text-sm font-medium text-gray-700">Estado</label>
              <Input
                type="text"
                id="status"
                value={newPackageInfo.status}
                onChange={(e) => setNewPackageInfo({...newPackageInfo, status: e.target.value})}
                className="mt-1"
                required
              />
            </div>
            <div>
              <label htmlFor="origin" className="block text-sm font-medium text-gray-700">Origen</label>
              <Input
                type="text"
                id="origin"
                value={newPackageInfo.origin}
                onChange={(e) => setNewPackageInfo({...newPackageInfo, origin: e.target.value})}
                className="mt-1"
                required
              />
            </div>
            <div>
              <label htmlFor="destination" className="block text-sm font-medium text-gray-700">Destino</label>
              <Input
                type="text"
                id="destination"
                value={newPackageInfo.destination}
                onChange={(e) => setNewPackageInfo({...newPackageInfo, destination: e.target.value})}
                className="mt-1"
                required
              />
            </div>
            <div>
              <label htmlFor="estimatedDelivery" className="block text-sm font-medium text-gray-700">Entrega estimada</label>
              <Input
                type="date"
                id="estimatedDelivery"
                value={newPackageInfo.estimatedDelivery}
                onChange={(e) => setNewPackageInfo({...newPackageInfo, estimatedDelivery: e.target.value})}
                className="mt-1"
                required
              />
            </div>
            <Button type="submit">Crear registro</Button>
          </form>
        </div>
      )}

      {/* Chat Button */}
      <Button
        className="fixed bottom-6 right-6 bg-[#4D148C] text-white hover:bg-[#4D148C]/90 shadow-lg"
      >
        <MessageSquare className="mr-2 h-4 w-4" />
        Pregúntale a FedEx
      </Button>
    </div>
  )
}